import random
import json
import os

# ‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå
WORDS_BY_LEVEL = {
    "animals": ["PANDA", "SHEEP", "HORSE", "GOOSE", "EAGLE", "ZEBRA", "WHALE","HIPPO", "RHINO", "SNAIL", "HYENA", "SHARK", "SLOTH"],
    "fruits":  ["APPLE", "MANGO", "GRAPE", "LEMON", "PEACH", "MELON", "OLIVE", "BERRY", "GUAVA", "PLUMS", "COCOA"],
    "objects": ["TABLE", "CHAIR", "PHONE", "CLOCK", "KNIFE", "PENCIL", "GLASS", "PLATE", "RADIO", "SPOON", "BRUSH", "PAPER", "SOFAS"],
    "instruments": ["AUDIO", "PIANO", "MUSIC", "SOUND", "DRUMS", "STAGE", "DANCE", "ALBUM", "RHYME", "REMIX", "MIXER", "OPERA", "BANDS"],
    "colors":  ["GREEN", "BLACK", "BROWN", "WHITE", "CREAM", "LEMON", "PEACH", "BEIGE", "AZURE", "AMBER"],
    "body_parts": ["HEART", "BRAIN", "TOOTH", "KNEES", "ELBOW", "THUMB", "WRIST", "ANKLE", "LIVER", "SPINE"],
    "food": ["PIZZA", "CANDY", "SALAD", "SUSHI", "HONEY", "STEAK", "CREAM", "JUICE", "SAUCE", "PASTA", "TOAST", "SUGAR", "WATER", "BREAD"],
    "countries": ["JAPAN", "CHINA", "INDIA", "EGYPT", "PARIS", "SPAIN", "KOREA", "NEPAL", "DUBAI", "QATAR", "CHILE", "MILAN"],
    "jobs": ["NURSE", "PILOT", "GUARD", "MINER", "ACTOR", "AGENT", "COACH"],
    "sports": ["CHESS", "RUGBY", "SKATE", "SWIMS", "GOLFS", "SAILS"],
    "nature": ["RIVER", "OCEAN", "BEACH", "STORM", "CLOUD", "STONE", "RAINY", "WINDS", "FLAME", "ROCKS", "MOUNT", "FLORA"],
    "time": ["MONTH", "HOURS", "EARLY", "NIGHT", "DATES", "EVENT", "LATER"],
    "emotions": ["HAPPY", "ANGRY", "PROUD", "SCARE", "SORRY", "WORRY", "RELAX", "SHOCK", "GLORY"],
    "music": ["PIANO", "GUITAR", "SAXON", "TRUMP", "BASSO", "CELLO", "FLUTE", "DRUMS", "VOICE", "CHORD", "NOTES", "LYRIC", "SCALE", "OPERA"]
}

ALL_TITLES = list(WORDS_BY_LEVEL.keys())
filename = 'leaderboard.json'

def print_rules():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏é‡∏Å‡∏ï‡∏¥‡∏Å‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°"""
    print("\n" + "="*50)
    print("üéÆ ‡∏Å‡∏é‡∏Å‡∏ï‡∏¥‡∏Å‡∏≤‡πÄ‡∏Å‡∏° Wordle üéÆ")
    print("="*50)
    print("üü© ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß: ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("üü® ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á: ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("‚¨ú ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö")
    print("\nüìä ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å:")
    print("‚Ä¢ Easy: 10 ‡∏£‡∏≠‡∏ö, ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô x0.5, ‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 5")
    print("‚Ä¢ Medium: 6 ‡∏£‡∏≠‡∏ö, ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô x1.0, ‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 5 (‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô)")
    print("‚Ä¢ Hard: 6 ‡∏£‡∏≠‡∏ö, ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô x1.5, ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πâ")
    print("="*50)

def leader_board(name, score, win, lose):
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"""
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
    if not os.path.exists(filename):
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump([], f)
    
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    with open(filename, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    found = False
    for player in data:
        if player['name'] == name:
            player['score'] += score
            player['win'] += win
            player['lose'] += lose
            latest_score = player['score']
            latest_win = player['win']
            latest_lose = player['lose']
            found = True
            break
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
    if not found:
        data.append({'name': name, 'score': score, 'win': win, 'lose': lose})
        latest_score = score
        latest_win = win
        latest_lose = lose
    
    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡πÑ‡∏õ‡∏ô‡πâ‡∏≠‡∏¢
    data.sort(key=lambda x: x["score"], reverse=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á Leaderboard
    print("\n" + "="*60)
    print("üèÜ LEADERBOARD TOP 5 üèÜ".center(60))
    print("="*60)
    print(f"{'‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö':<8} {'‡∏ä‡∏∑‡πà‡∏≠':<15} {'‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô':<10} {'‡∏ä‡∏ô‡∏∞':<8} {'‡πÅ‡∏û‡πâ':<8}")
    print("-"*60)
    
    for i, player in enumerate(data[:5], start=1):
        win_rate = round((player['win'] / (player['win'] + player['lose']) * 100), 1) if (player['win'] + player['lose']) > 0 else 0
        print(f"{i:<8} {player['name']:<15} {player['score']:<10} {player['win']:<8} {player['lose']:<8} ({win_rate}%)")
    
    print("="*60)
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    
    return f"W:{latest_win} L:{latest_lose}", latest_score

def game_logic(answer, random_word):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö Wordle"""
    SPACE = '-'
    answer_list = ['‚¨ú'] * len(random_word)
    character_list = [f'{SPACE:^3}'] * len(random_word)
    char_list = list(random_word)
    
    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß)
    for i in range(len(random_word)):
        if answer[i] == random_word[i]:
            answer_list[i] = 'üü©'
            character_list[i] = f'{random_word[i]:^3}'
            char_list[i] = None
    
    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏¥‡∏î (‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á)
    for i in range(len(random_word)):
        if answer_list[i] == '‚¨ú' and answer[i] in char_list:
            answer_list[i] = 'üü®'
            character_list[i] = f'{answer[i]:^3}'
            char_list[char_list.index(answer[i])] = None
    
    return ''.join(answer_list), ''.join(character_list)

def game_play(random_word, random_category, level, point_rate):
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡∏°‡∏´‡∏•‡∏±‡∏Å"""
    won = False
    win = 0
    lose = 0
    player_round = 0
    player_point = 10
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö
    round_limit = 10 if level == 'easy' else 6
    
    print(f"\nüéØ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°! ‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏≥ {len(random_word)} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£")
    print(f"üìù ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ {round_limit} ‡∏£‡∏≠‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏¢")
    print(f"üíé ‡∏£‡∏∞‡∏î‡∏±‡∏ö: {level.upper()}")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á header
    print(f"\n{'‡∏£‡∏≠‡∏ö':<5} {'‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö':<15} {'‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå'}")
    print("-" * 40)
    
    while player_round < round_limit:
        player_round += 1
        user_answer = input(f"{player_round:>2}. > ").upper().strip()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á input
        if len(user_answer) != len(random_word):
            print(f"‚ùå ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ {len(random_word)} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
            player_round -= 1
            continue
            
        if not user_answer.isalpha():
            print("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A-Z ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
            player_round -= 1
            continue
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        answer, char_hint = game_logic(user_answer, random_word)
        print(f"    {user_answer:<15} {answer}")
        print(f"    {char_hint}")
        
        if user_answer == random_word:
            won = True
            break
        else:
            player_point -= 1
        
        # ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 5
        if player_round == 5:
            if level == 'easy':
                print(f"üí° ‡πÉ‡∏ö‡πâ: ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà '{random_category}'")
            elif level == 'medium':
                hint_choice = input("üí° ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏´‡∏°? (‡πÅ‡∏•‡∏Å‡∏Å‡∏±‡∏ö 1 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô) [y/n]: ").lower()
                if hint_choice in ['y', 'yes']:
                    print(f"üí° ‡πÉ‡∏ö‡πâ: ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà '{random_category}'")
                    player_point = max(0, player_point - 1)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    print("\n" + "="*50)
    if won:
        print("üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å! üéâ")
        win = 1
        final_score = int(player_point * point_rate[level])
    else:
        print("üòî ‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢ ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å")
        lose = 1
        player_point = 0
        final_score = 0
    
    print(f"‚úÖ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠: {random_word}")
    print(f"üìÇ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {random_category}")
    print(f"üéØ ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏¢: {player_round}/{round_limit}")
    print(f"üí∞ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: {final_score}")
    print("="*50)
    
    return player_point, win, lose

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üéÆ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏Å‡∏° WORDLE üéÆ")
    
    while True:
        print_rules()
        username = input("\nüë§ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: ").strip()
        
        if not username:
            print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
            continue
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡∏°
        LEVEL_LIST = ["easy", "medium", "hard"]
        MULTIPLIER = {"easy": 0.5, "medium": 1, "hard": 1.5}
        
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å
        while True:
            level = input('\n‚ö° ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å (easy/medium/hard): ').lower().strip()
            if level in LEVEL_LIST:
                break
            else:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å easy, medium ‡∏´‡∏£‡∏∑‡∏≠ hard")
        
        # ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        random_category = random.choice(ALL_TITLES)
        random_word = random.choice(WORDS_BY_LEVEL[random_category])
        
        # ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
        userpoint, win, lose = game_play(random_word, random_category, level, MULTIPLIER)
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        win_lose_record, total_point = leader_board(username, int(userpoint * MULTIPLIER[level]), win, lose)
        
        print(f"\nüìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á {username}:")
        print(f"üíé ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°: {total_point} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô")
        print(f"üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥: {win_lose_record}")
        
        # ‡∏ñ‡∏≤‡∏°‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠
        if input("\nüîÑ ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏´‡∏°? [y/n]: ").lower() not in ['y', 'yes']:
            print("\nüôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô! ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà! üéÆ")
            break

if __name__ == "__main__":
    main()
