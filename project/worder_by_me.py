#=========|‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥|========
#‡∏ó‡∏≥‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î(‡∏á‡πà‡∏≤‡∏¢ ‡∏Å‡∏•‡∏≤‡∏á ‡∏¢‡∏≤‡∏Å)‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß
#‡πÄ‡∏ã‡∏ü‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß
#‡∏ó‡∏≥leader bord
#‡∏ó‡∏≥hint ‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß
#=================

import random
import json
import os
from word  import WORDS_BY_LEVEL, ALL_TITLES  #(‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå)

#=================
filename = 'leaderboard.json' #‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
#=============
def show_leaderboard():#‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    '''‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô'''
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with open(filename, "r", encoding="utf-8") as f:
    data = json.load(f)

# sort ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏°‡∏≤‡∏Å‡πÑ‡∏õ‡∏ô‡πâ‡∏≠‡∏¢
data.sort(key=lambda x: x["score"], reverse=True)

# print leaderboard
print("===== Leaderboard =====")
for i, player in enumerate(data, start=1):
    print(f"{i}. {player['name']} | Score: {player['score']} | Win: {player['win']} | Lose: {player['lose']}")
print("=======================")

def leader_bord(name, score, win, lose):#‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    '''‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô'''
    #‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πá‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    if not os.path.exists(filename):
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump([], f)
    #‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    with open(filename, 'r', encoding='utf-8') as f:
        data = json.load(f)
    #‡πÄ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    found = False
    for player in data:
        if player['name'] == name:
            player['score'] += score #‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πá‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            player['win'] += win
            player['lose'] += lose
            latest_score = player['score']
            latest_win = player['win']
            latest_lose = player['lose']
            found = True
            break
    #‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πá‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà
    if not found:
        data.append({'name': name, 'score': score, 'win': win, 'lose': lose})
        latest_score = score
        latest_win = data[-1].get('win', 0)
        latest_lose = data[-1].get('lose', 0)
    #‡πÇ‡∏ä‡∏ß‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°‡πÅ‡∏•‡∏∞win lose
    win_lose = 'win:{} lose:{}'.format(latest_win, latest_lose)
    #‡πÄ‡∏ã‡∏ü
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    return win_lose, latest_score
#=================
def game_logic(answer, random_word):#logic‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°
    '''‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ñ‡∏π‡∏Å‡∏ú‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°'''
    SPACE = '-'
    answer_list = ['‚¨ú'] * len(random_word)
    charecter_list = [f'{SPACE:^2}'] * len(random_word)
    char_list = list(random_word)

    for i in range(len(random_word)):#‡πÄ‡∏ä‡πá‡∏Ñ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        if answer[i] == random_word[i]:
            answer_list[i] = 'üü©'
            charecter_list[i] = f'{random_word[i]:^2}'
            char_list[i] = None #‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Åanswer_list

    for i in range(len(random_word)):#‡πÄ‡∏ä‡πá‡∏Ñ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        if answer_list[i] == '‚¨ú' and answer[i] in char_list:
            answer_list[i] = 'üü®'
            charecter_list[i] = f'{answer[i]:^2}'
            char_list[char_list.index(answer[i])] = None #‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Åanswer_list
    return ''.join(answer_list),''.join(charecter_list)

def game_play(random_word, random_category, level,point_rate):#‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
    '''‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡∏°'''

    won = False #‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    win = 0
    lose = 0
    player_round = 0 #‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    player_point = 10 #‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
    if level == 'easy':#‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        round_limit = 10
    else:
        round_limit = 6

    while player_round < round_limit:#‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô6‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        player_round += 1
        print(f'‡∏ó‡∏≤‡∏¢‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà {player_round}')
        user_answer = input().upper() #‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
        if len(user_answer) != len(random_word) or not user_answer.isalpha():#‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
            print(f'‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß {len(random_word)} ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ A-Z ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà')
            player_round -= 1 #‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≠‡∏ö
            continue
        answer, char_hint = game_logic(user_answer, random_word)
        print(answer, char_hint) #‡πÇ‡∏ä‡∏ß‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏¢
        if user_answer.upper() == random_word.upper():#‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ä‡∏ô‡∏∞‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
            won = True
            break
        else:
            player_point -= 1 #‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î‡∏•‡∏î‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô

        if player_round == 5: #‡∏ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà5‡πÅ‡∏•‡πâ‡∏ß
            if level == 'easy':#‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏°‡∏î‡∏á‡πà‡∏≤‡∏¢
                print(f'‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {random_category}')#‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            if level == 'medium':#‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏•‡∏≤‡∏á
                user_input = input('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏´‡∏°? ‡πÅ‡∏ï‡πà‡πÅ‡∏•‡∏Å‡∏Å‡∏±‡∏ö 1 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ô‡∏∞ (yes/no) :')#‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡πâ‡πÑ‡∏´‡∏°
                if user_input.lower() == 'yes':#‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡πÉ‡∏ä‡πà
                    print(f'‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {random_category}')#‡πÉ‡∏ö‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
                    player_point -= 1 #‡πÅ‡∏•‡∏Å‡∏Å‡∏±‡∏ö1‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô

    if won is True:#‡∏ñ‡πâ‡∏≤‡∏ä‡∏ô‡∏∞
        print('\n‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ! ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠',end=' ')
        win += 1
    else:#‡∏ñ‡πâ‡∏≤‡πÅ‡∏û‡πâ
        print('\n‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ! ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠',end=' ')
        player_point = 0 #‡∏ñ‡πâ‡∏≤‡πÅ‡∏û‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏õ‡πá‡∏ô0
        lose += 1
    print(f"{random_word} ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô {player_point * point_rate[level]} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô")
    return player_point,win,lose

def main():#‡∏£‡∏≠‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏°‡∏≤‡∏ó‡∏≥
    '''‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å'''
    while True:
        username = input('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: ')
        #=====‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥=====
        ALL_CATEGORIES = ALL_TITLES
        LEVEL_LIST = ["easy", "medium", "hard"]
        MULTIPLIER = {"easy": 0.5, "medium": 1, "hard": 1.5}
        #===============
        while True:
            level = input('\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å (easy, medium, hard): ').lower()
            if level in LEVEL_LIST:
                random_category = random.choice(ALL_CATEGORIES)
                random_word = random.choice(WORDS_BY_LEVEL[random_category])
                break
            else:
                print("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà")
        #===============
        print(f'\n‡πÄ‡∏â‡∏•‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏∑‡∏≠ {random_word}')#‡πÄ‡∏≠‡∏≤‡πÉ‡∏ß‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏â‡∏¢‡πÜ‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡∏≠‡πà‡∏∞‡πÑ‡∏£‡∏°‡∏≤

        userpoint, win, lose = game_play(random_word, random_category, level, MULTIPLIER)#‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°
        show_win_lose, total_point = leader_bord(username, (userpoint * MULTIPLIER[level]), win, lose)#‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
        print(f'‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {username} ‡∏Ñ‡∏∑‡∏≠ {total_point} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏û‡πâ/‡∏ä‡∏ô‡∏∞:{show_win_lose}')#‡πÇ‡∏ä‡∏ß‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°‡πÅ‡∏•‡∏∞ win lose
        show_leaderboard()#‡πÇ‡∏ä‡∏ß‡πå‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        if input("\n‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡πÑ‡∏´‡∏°? (yes/no) ").lower() == 'yes':
            continue
        else:
            print("‡∏à‡∏ö‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô!")
            break

if __name__ == "__main__":
    main()
